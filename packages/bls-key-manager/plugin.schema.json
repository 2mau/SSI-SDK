{
  "IBlsKeyManager": {
    "components": {
      "schemas": {
        "IKeyManagerCreateArgs": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TKeyType",
              "description": "Key type"
            },
            "kms": {
              "type": "string",
              "description": "Key Management System"
            },
            "meta": {
              "$ref": "#/components/schemas/KeyMetadata",
              "description": "Optional. Key meta data"
            }
          },
          "required": [
            "type",
            "kms"
          ],
          "description": "Input arguments for  {@link  IBlsKeyManager.keyManagerCreate | keyManagerCreate }"
        },
        "TKeyType": {
          "type": "string",
          "enum": [
            "Ed25519",
            "Secp256k1",
            "X25519",
            "Bls12381G1",
            "Bls12381G2"
          ],
          "description": "Cryptographic key type"
        },
        "KeyMetadata": {
          "type": "object",
          "properties": {
            "algorithms": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "BBSKey": {
          "type": "object",
          "properties": {
            "kid": {
              "type": "string",
              "description": "Key ID"
            },
            "kms": {
              "type": "string",
              "description": "Key Management System"
            },
            "type": {
              "$ref": "#/components/schemas/TKeyType",
              "description": "Key type"
            },
            "publicKeyHex": {
              "type": "string",
              "description": "Public key"
            },
            "privateKeyHex": {
              "type": "string",
              "description": "Optional. Private key"
            },
            "meta": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KeyMetadata"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional. Key metadata. This should be used to determine which algorithms are supported."
            }
          }
        },
        "IKeyManagerDeleteArgs": {
          "type": "object",
          "properties": {
            "kid": {
              "type": "string",
              "description": "Key ID"
            }
          },
          "required": [
            "kid"
          ],
          "description": "Input arguments for  {@link  IBlsKeyManager.keyManagerDelete | keyManagerDelete }"
        },
        "IKeyManagerGetArgs": {
          "type": "object",
          "properties": {
            "kid": {
              "type": "string",
              "description": "Key ID"
            }
          },
          "required": [
            "kid"
          ],
          "description": "Input arguments for  {@link  IBlsKeyManager.keyManagerGet | keyManagerGet }"
        },
        "IKey": {
          "type": "object",
          "properties": {
            "kid": {
              "type": "string",
              "description": "Key ID"
            },
            "kms": {
              "type": "string",
              "description": "Key Management System"
            },
            "type": {
              "$ref": "#/components/schemas/TKeyType",
              "description": "Key type"
            },
            "publicKeyHex": {
              "type": "string",
              "description": "Public key"
            },
            "privateKeyHex": {
              "type": "string",
              "description": "Optional. Private key"
            },
            "meta": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KeyMetadata"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional. Key metadata. This should be used to determine which algorithms are supported."
            }
          },
          "required": [
            "kid",
            "kms",
            "type",
            "publicKeyHex"
          ],
          "description": "Cryptographic key"
        },
        "MinimalImportableKey": {
          "$ref": "#/components/schemas/RequireOnly<IKey,(\"privateKeyHex\"|\"type\"|\"kms\")>",
          "description": "Represents the properties required to import a key."
        },
        "RequireOnly<IKey,(\"privateKeyHex\"|\"type\"|\"kms\")>": {
          "type": "object",
          "properties": {
            "kid": {
              "type": "string",
              "description": "Key ID"
            },
            "kms": {
              "type": "string",
              "description": "Key Management System"
            },
            "type": {
              "$ref": "#/components/schemas/TKeyType",
              "description": "Key type"
            },
            "publicKeyHex": {
              "type": "string",
              "description": "Public key"
            },
            "privateKeyHex": {
              "type": "string",
              "description": "Optional. Private key"
            },
            "meta": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KeyMetadata"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional. Key metadata. This should be used to determine which algorithms are supported."
            }
          },
          "description": "Represents an object type where a subset of keys are required and everything else is optional."
        },
        "IKeyManagerSignArgs": {
          "type": "object",
          "properties": {
            "keyRef": {
              "type": "string",
              "description": "The key handle, as returned during `keyManagerCreateKey`"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "BYTES_PER_ELEMENT": {
                    "type": "number"
                  },
                  "buffer": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "byteLength": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "byteLength"
                        ]
                      },
                      {}
                    ]
                  },
                  "byteLength": {
                    "type": "number"
                  },
                  "byteOffset": {
                    "type": "number"
                  },
                  "length": {
                    "type": "number"
                  }
                },
                "required": [
                  "BYTES_PER_ELEMENT",
                  "buffer",
                  "byteLength",
                  "byteOffset",
                  "length"
                ],
                "additionalProperties": {
                  "type": "number"
                }
              },
              "description": "Data to sign"
            }
          },
          "required": [
            "keyRef",
            "data"
          ],
          "description": "Input arguments for  {@link  IBlsKeyManager.keyManagerSign | keyManagerSign }"
        },
        "IKeyManagerVerifyArgs": {
          "type": "object",
          "properties": {
            "kms": {
              "type": "string"
            },
            "publicKey": {
              "type": "object",
              "properties": {
                "BYTES_PER_ELEMENT": {
                  "type": "number"
                },
                "buffer": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "byteLength": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "byteLength"
                      ]
                    },
                    {}
                  ]
                },
                "byteLength": {
                  "type": "number"
                },
                "byteOffset": {
                  "type": "number"
                },
                "length": {
                  "type": "number"
                }
              },
              "required": [
                "BYTES_PER_ELEMENT",
                "buffer",
                "byteLength",
                "byteOffset",
                "length"
              ],
              "additionalProperties": {
                "type": "number"
              }
            },
            "messages": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "BYTES_PER_ELEMENT": {
                    "type": "number"
                  },
                  "buffer": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "byteLength": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "byteLength"
                        ]
                      },
                      {}
                    ]
                  },
                  "byteLength": {
                    "type": "number"
                  },
                  "byteOffset": {
                    "type": "number"
                  },
                  "length": {
                    "type": "number"
                  }
                },
                "required": [
                  "BYTES_PER_ELEMENT",
                  "buffer",
                  "byteLength",
                  "byteOffset",
                  "length"
                ],
                "additionalProperties": {
                  "type": "number"
                }
              }
            },
            "signature": {
              "type": "object",
              "properties": {
                "BYTES_PER_ELEMENT": {
                  "type": "number"
                },
                "buffer": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "byteLength": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "byteLength"
                      ]
                    },
                    {}
                  ]
                },
                "byteLength": {
                  "type": "number"
                },
                "byteOffset": {
                  "type": "number"
                },
                "length": {
                  "type": "number"
                }
              },
              "required": [
                "BYTES_PER_ELEMENT",
                "buffer",
                "byteLength",
                "byteOffset",
                "length"
              ],
              "additionalProperties": {
                "type": "number"
              }
            }
          },
          "required": [
            "kms",
            "publicKey",
            "messages",
            "signature"
          ]
        }
      },
      "methods": {
        "keyManagerCreate": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IKeyManagerCreateArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/BBSKey"
          }
        },
        "keyManagerDelete": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IKeyManagerDeleteArgs"
          },
          "returnType": {
            "type": "boolean"
          }
        },
        "keyManagerGet": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IKeyManagerGetArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/IKey"
          }
        },
        "keyManagerGetKeyManagementSystems": {
          "description": "",
          "arguments": {
            "type": "object"
          },
          "returnType": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "keyManagerImport": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/MinimalImportableKey"
          },
          "returnType": {
            "$ref": "#/components/schemas/BBSKey"
          }
        },
        "keyManagerSign": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IKeyManagerSignArgs"
          },
          "returnType": {
            "type": "string"
          }
        },
        "keyManagerVerify": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IKeyManagerVerifyArgs"
          },
          "returnType": {
            "type": "boolean"
          }
        }
      }
    }
  }
}